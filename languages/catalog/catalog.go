// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package catalog

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p := messageKeyToIndex[key]
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en":    &dictionary{index: enIndex, data: enData},
		"ja_JP": &dictionary{index: ja_JPIndex, data: ja_JPData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"Hello world!":                       0,
	"There are %v books in the library.": 1,
}

var enIndex = []uint32{ // 3 elements
	0x00000000, 0x0000000d, 0x00000033,
} // Size: 36 bytes

const enData string = "" + // Size: 51 bytes
	"\x02Hello world!\x02There are %[1]v books in the library."

var ja_JPIndex = []uint32{ // 3 elements
	0x00000000, 0x00000017, 0x00000047,
} // Size: 36 bytes

const ja_JPData string = "" + // Size: 71 bytes
	"\x02こんにちは世界!\x02図書室には%[1]v冊の本があります。"

	// Total table size 194 bytes (0KiB); checksum: BB29E02D
